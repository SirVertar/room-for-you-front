plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'war'
    id 'org.gretty' version '3.0.3'
    id 'com.vaadin' version '0.7.0'

}

defaultTasks("clean", "build")

gretty {
    contextPath = "/"
    servletContainer = "jetty9.4"
}

vaadin {
    pnpmEnable = true
    productionMode = true
}

war {
    enabled=true
}

group = 'com.mateusz.jakuszko'
version = '0_1_0'
sourceCompatibility = '1.8'

repositories {
    jcenter()
}


ext {
    set('vaadinVersion', "14.2.3")
}

dependencies {
    implementation 'com.vaadin:vaadin-spring-boot-starter'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation 'junit:junit:4.12'
    implementation enforcedPlatform('com.vaadin:vaadin-bom:14.2.3')

    compile group: 'javax.inject', name: 'javax.inject', version: '1'

    compile('com.google.code.gson:gson:2.8.2')

    // Vaadin 14
    implementation("com.vaadin:vaadin-core") {
//         Webjars are only needed when running in Vaadin 13 compatibility mode
        ["com.vaadin.webjar", "org.webjars.bowergithub.insites",
         "org.webjars.bowergithub.polymer", "org.webjars.bowergithub.polymerelements",
         "org.webjars.bowergithub.vaadin", "org.webjars.bowergithub.webcomponents"]
                .forEach { group -> exclude(group: group) }
    }
    providedCompile "javax.servlet:javax.servlet-api:3.1.0"
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
    }
}

test {
    useJUnitPlatform()
}
